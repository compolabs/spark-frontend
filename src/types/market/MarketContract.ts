/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.1
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Option, Enum, Vec } from "./common";

export type AccountErrorInput = Enum<{ InsufficientBalance: [] }>;
export type AccountErrorOutput = AccountErrorInput;
export enum AssetErrorInput { InvalidAsset = 'InvalidAsset', InvalidFeeAsset = 'InvalidFeeAsset' };
export enum AssetErrorOutput { InvalidAsset = 'InvalidAsset', InvalidFeeAsset = 'InvalidFeeAsset' };
export enum AssetTypeInput { Base = 'Base', Quote = 'Quote' };
export enum AssetTypeOutput { Base = 'Base', Quote = 'Quote' };
export enum AuthErrorInput { Unauthorized = 'Unauthorized' };
export enum AuthErrorOutput { Unauthorized = 'Unauthorized' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export enum LimitTypeInput { IOC = 'IOC', FOK = 'FOK' };
export enum LimitTypeOutput { IOC = 'IOC', FOK = 'FOK' };
export type MatchErrorInput = Enum<{ CantMatch: [string, string], CantMatchMany: undefined, CantFulfillMany: undefined }>;
export type MatchErrorOutput = Enum<{ CantMatch: [string, string], CantMatchMany: void, CantFulfillMany: void }>;
export enum OrderChangeTypeInput { OrderOpened = 'OrderOpened', OrderCancelled = 'OrderCancelled', OrderMatched = 'OrderMatched' };
export enum OrderChangeTypeOutput { OrderOpened = 'OrderOpened', OrderCancelled = 'OrderCancelled', OrderMatched = 'OrderMatched' };
export type OrderErrorInput = Enum<{ OrderNotFound: string, PriceTooSmall: [], ZeroOrderAmount: undefined, ZeroLockAmount: undefined, FailedToRemove: string }>;
export type OrderErrorOutput = Enum<{ OrderNotFound: string, PriceTooSmall: [], ZeroOrderAmount: void, ZeroLockAmount: void, FailedToRemove: string }>;
export enum OrderTypeInput { Buy = 'Buy', Sell = 'Sell' };
export enum OrderTypeOutput { Buy = 'Buy', Sell = 'Sell' };
export enum ReentrancyErrorInput { NonReentrant = 'NonReentrant' };
export enum ReentrancyErrorOutput { NonReentrant = 'NonReentrant' };
export type ValueErrorInput = Enum<{ InvalidAmount: undefined, InvalidSlippage: undefined, InvalidArrayLength: undefined, InvalidFeeAmount: [] }>;
export type ValueErrorOutput = Enum<{ InvalidAmount: void, InvalidSlippage: void, InvalidArrayLength: void, InvalidFeeAmount: [] }>;

export type AccountInput = { liquid: BalanceInput, locked: BalanceInput };
export type AccountOutput = { liquid: BalanceOutput, locked: BalanceOutput };
export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type BalanceInput = { base: BigNumberish, quote: BigNumberish };
export type BalanceOutput = { base: BN, quote: BN };
export type CancelOrderEventInput = { order_id: string };
export type CancelOrderEventOutput = CancelOrderEventInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type DepositEventInput = { amount: BigNumberish, asset: AssetIdInput, user: IdentityInput };
export type DepositEventOutput = { amount: BN, asset: AssetIdOutput, user: IdentityOutput };
export type MatchOrderEventInput = { order_id: string, asset: AssetIdInput, order_matcher: IdentityInput, owner: IdentityInput, counterparty: IdentityInput, match_size: BigNumberish, match_price: BigNumberish };
export type MatchOrderEventOutput = { order_id: string, asset: AssetIdOutput, order_matcher: IdentityOutput, owner: IdentityOutput, counterparty: IdentityOutput, match_size: BN, match_price: BN };
export type OpenOrderEventInput = { amount: BigNumberish, asset: AssetIdInput, order_type: OrderTypeInput, order_id: string, price: BigNumberish, user: IdentityInput };
export type OpenOrderEventOutput = { amount: BN, asset: AssetIdOutput, order_type: OrderTypeOutput, order_id: string, price: BN, user: IdentityOutput };
export type OrderInput = { amount: BigNumberish, asset_type: AssetTypeInput, order_type: OrderTypeInput, owner: IdentityInput, price: BigNumberish, block_height: BigNumberish, matcher_fee: BigNumberish, protocol_fee: BigNumberish };
export type OrderOutput = { amount: BN, asset_type: AssetTypeOutput, order_type: OrderTypeOutput, owner: IdentityOutput, price: BN, block_height: number, matcher_fee: number, protocol_fee: BN };
export type OrderChangeInfoInput = { change_type: OrderChangeTypeInput, block_height: BigNumberish, sender: IdentityInput, tx_id: string, amount_before: BigNumberish, amount_after: BigNumberish };
export type OrderChangeInfoOutput = { change_type: OrderChangeTypeOutput, block_height: number, sender: IdentityOutput, tx_id: string, amount_before: BN, amount_after: BN };
export type SetMatcherRewardEventInput = { amount: BigNumberish };
export type SetMatcherRewardEventOutput = { amount: number };
export type SetProtocolFeeEventInput = { amount: BigNumberish };
export type SetProtocolFeeEventOutput = { amount: number };
export type TradeOrderEventInput = { base_sell_order_id: string, base_buy_order_id: string, order_matcher: IdentityInput, trade_size: BigNumberish, trade_price: BigNumberish, block_height: BigNumberish, tx_id: string };
export type TradeOrderEventOutput = { base_sell_order_id: string, base_buy_order_id: string, order_matcher: IdentityOutput, trade_size: BN, trade_price: BN, block_height: number, tx_id: string };
export type WithdrawEventInput = { amount: BigNumberish, asset: AssetIdInput, user: IdentityInput };
export type WithdrawEventOutput = { amount: BN, asset: AssetIdOutput, user: IdentityOutput };
export type WithdrawProtocolFeeEventInput = { amount: BigNumberish, to: IdentityInput, owner: IdentityInput };
export type WithdrawProtocolFeeEventOutput = { amount: BN, to: IdentityOutput, owner: IdentityOutput };

export type MarketContractConfigurables = Partial<{
  BASE_ASSET: AssetIdInput;
  BASE_ASSET_DECIMALS: BigNumberish;
  OWNER: AddressInput;
  PRICE_DECIMALS: BigNumberish;
  QUOTE_ASSET: AssetIdInput;
  QUOTE_ASSET_DECIMALS: BigNumberish;
  FUEL_ASSET: AssetIdInput;
  ETH_BASE_PRICE: BigNumberish;
  ETH_QUOTE_PRICE: BigNumberish;
  VERSION: BigNumberish;
}>;

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "(struct std::address::Address, struct std::asset_id::AssetId, u32, struct std::asset_id::AssetId, u32, u32, struct std::asset_id::AssetId, u32)",
      "concreteTypeId": "25021b94c74394449f77590716751d9ea42fe49aa7bf2c35793defbf6e7d09e5",
      "metadataTypeId": 2
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "enum data_structures::asset_type::AssetType",
      "concreteTypeId": "4c4bcee5a492c5113714e96c87704a3af9b8bd766ce5da2ca716a6564da06ba3",
      "metadataTypeId": 3
    },
    {
      "type": "enum data_structures::limit_type::LimitType",
      "concreteTypeId": "d9c35258b461d6cc17f23d4d7c184b37b99882e5c80d683a5826bcb9b2494e86",
      "metadataTypeId": 4
    },
    {
      "type": "enum data_structures::order_type::OrderType",
      "concreteTypeId": "87d371fb295bf9d2ae8ded087940e8d0b097ddef40d8499ac650a22985df2682",
      "metadataTypeId": 6
    },
    {
      "type": "enum errors::AccountError",
      "concreteTypeId": "d4bce56f7daed5c8d2b62c0f0745c18d9fdd0b2f0dafecf85ebdd9c7378b5c63",
      "metadataTypeId": 7
    },
    {
      "type": "enum errors::AssetError",
      "concreteTypeId": "e0676030b211eb9ed3b9837fc852a3cf3b6533a31533dd3ab957e8b3f6e77dd3",
      "metadataTypeId": 8
    },
    {
      "type": "enum errors::AuthError",
      "concreteTypeId": "06c3d78f1057db580eb36dc2fc04ebd7407f4a4e954417b6761844fe38ee1a5d",
      "metadataTypeId": 9
    },
    {
      "type": "enum errors::MatchError",
      "concreteTypeId": "dbce8f9c6be61d876835d7a0b5794cfc25fc3b171ba3748ec4c8f2e7ce426cf6",
      "metadataTypeId": 10
    },
    {
      "type": "enum errors::OrderError",
      "concreteTypeId": "0ddf63471f7b27c54c55fd3d75fe37594fb1b07a496dba57eb8fc56497e9d9c1",
      "metadataTypeId": 11
    },
    {
      "type": "enum errors::ValueError",
      "concreteTypeId": "380bd4d6b96f9eaa3a3d8db8bb9753399443715fb3fd65460cc28d6ab4d3659b",
      "metadataTypeId": 12
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 13
    },
    {
      "type": "enum std::option::Option<struct data_structures::account::Account>",
      "concreteTypeId": "bd0e347385bb64c47e8218e9ee0e54aca355fca0d41b062ea753e7d85e0b6f9f",
      "metadataTypeId": 14,
      "typeArguments": [
        "10410fea5a6cba4a6b6079f9d804c0daf23980a360d009048ecb36118036c28e"
      ]
    },
    {
      "type": "enum std::option::Option<struct data_structures::order::Order>",
      "concreteTypeId": "af7345d115f618be19cd709b6734bdd5fd52bb0c27617a74a9564e4cea947d01",
      "metadataTypeId": 14,
      "typeArguments": [
        "d0d7221d2233a12a685667b843d8aab0c0b82407fc47b719c07aeb77dfcaed6a"
      ]
    },
    {
      "type": "enum sway_libs::reentrancy::errors::ReentrancyError",
      "concreteTypeId": "4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038",
      "metadataTypeId": 15
    },
    {
      "type": "struct data_structures::account::Account",
      "concreteTypeId": "10410fea5a6cba4a6b6079f9d804c0daf23980a360d009048ecb36118036c28e",
      "metadataTypeId": 18
    },
    {
      "type": "struct data_structures::order::Order",
      "concreteTypeId": "d0d7221d2233a12a685667b843d8aab0c0b82407fc47b719c07aeb77dfcaed6a",
      "metadataTypeId": 20
    },
    {
      "type": "struct data_structures::order_change::OrderChangeInfo",
      "concreteTypeId": "29bc325768e93baaa35ac6e466461baa03f97fb67a0a328521afacca7d3bf987",
      "metadataTypeId": 21
    },
    {
      "type": "struct events::CancelOrderEvent",
      "concreteTypeId": "cbadef79adf1e6906cac7404759d7d55a9eaa9f1e6d479ecbbfa76f727486081",
      "metadataTypeId": 22
    },
    {
      "type": "struct events::DepositEvent",
      "concreteTypeId": "aeb9b947da259c606e2c25be1150e2150f609fe5f2ec593c9a7ebb771e4e7065",
      "metadataTypeId": 23
    },
    {
      "type": "struct events::MatchOrderEvent",
      "concreteTypeId": "1f8647a46c73c952a719dd380c2aa8f67c2ba78a07c43225e26166d5d6b70886",
      "metadataTypeId": 24
    },
    {
      "type": "struct events::OpenOrderEvent",
      "concreteTypeId": "6c6a47ac80e7110dd8666e169f0fffe2d1378df88cf8960bb9dfe14a84ac3495",
      "metadataTypeId": 25
    },
    {
      "type": "struct events::SetMatcherRewardEvent",
      "concreteTypeId": "090412be710caebee4e019479841ea0100912819a3e1c52ba39b1faa7b778c83",
      "metadataTypeId": 26
    },
    {
      "type": "struct events::SetProtocolFeeEvent",
      "concreteTypeId": "957dde23e9fbd44b1bada18eae8b84f6d868be2fe55b721ce24b54cdcdafda79",
      "metadataTypeId": 27
    },
    {
      "type": "struct events::TradeOrderEvent",
      "concreteTypeId": "fe08cb2392b6eb92ee6b7868e2877ca0630f87f543acc63897f7d806229379d5",
      "metadataTypeId": 28
    },
    {
      "type": "struct events::WithdrawEvent",
      "concreteTypeId": "9787083b0003f388ec6bf30609ff6a10c76fada67314a162841a445b07a17168",
      "metadataTypeId": 29
    },
    {
      "type": "struct events::WithdrawProtocolFeeEvent",
      "concreteTypeId": "8d138e4606994bba4afdb97227287e88ead334b73c4ea0c30e2920b2bd57e82a",
      "metadataTypeId": 30
    },
    {
      "type": "struct std::address::Address",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "metadataTypeId": 31
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 32
    },
    {
      "type": "struct std::vec::Vec<b256>",
      "concreteTypeId": "32559685d0c9845f059bf9d472a0a38cf77d36c23dfcffe5489e86a65cdd9198",
      "metadataTypeId": 35,
      "typeArguments": [
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
      ]
    },
    {
      "type": "struct std::vec::Vec<struct data_structures::order_change::OrderChangeInfo>",
      "concreteTypeId": "742fbfc9dbc675c4bb942c1c3d87581f5da5c5a8b0fc21e0d1f8d873328d5e5a",
      "metadataTypeId": 35,
      "typeArguments": [
        "29bc325768e93baaa35ac6e466461baa03f97fb67a0a328521afacca7d3bf987"
      ]
    },
    {
      "type": "u32",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "(_, _)",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "__tuple_element",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "(_, _, _, _, _, _, _, _)",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": 31
        },
        {
          "name": "__tuple_element",
          "typeId": 32
        },
        {
          "name": "__tuple_element",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "__tuple_element",
          "typeId": 32
        },
        {
          "name": "__tuple_element",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "__tuple_element",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "__tuple_element",
          "typeId": 32
        },
        {
          "name": "__tuple_element",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ]
    },
    {
      "type": "enum data_structures::asset_type::AssetType",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "Base",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Quote",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum data_structures::limit_type::LimitType",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "IOC",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "FOK",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum data_structures::order_change::OrderChangeType",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "OrderOpened",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "OrderCancelled",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "OrderMatched",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum data_structures::order_type::OrderType",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "Buy",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Sell",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::AccountError",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "InsufficientBalance",
          "typeId": 0
        }
      ]
    },
    {
      "type": "enum errors::AssetError",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "InvalidAsset",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "InvalidFeeAsset",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::AuthError",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "Unauthorized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::MatchError",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "CantMatch",
          "typeId": 1
        },
        {
          "name": "CantMatchMany",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "CantFulfillMany",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::OrderError",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "OrderNotFound",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "PriceTooSmall",
          "typeId": 0
        },
        {
          "name": "ZeroOrderAmount",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "ZeroLockAmount",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "FailedToRemove",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "enum errors::ValueError",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "InvalidAmount",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "InvalidSlippage",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "InvalidArrayLength",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "InvalidFeeAmount",
          "typeId": 0
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "Address",
          "typeId": 31
        },
        {
          "name": "ContractId",
          "typeId": 33
        }
      ]
    },
    {
      "type": "enum std::option::Option",
      "metadataTypeId": 14,
      "components": [
        {
          "name": "None",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Some",
          "typeId": 16
        }
      ],
      "typeParameters": [
        16
      ]
    },
    {
      "type": "enum sway_libs::reentrancy::errors::ReentrancyError",
      "metadataTypeId": 15,
      "components": [
        {
          "name": "NonReentrant",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 16
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 17
    },
    {
      "type": "struct data_structures::account::Account",
      "metadataTypeId": 18,
      "components": [
        {
          "name": "liquid",
          "typeId": 19
        },
        {
          "name": "locked",
          "typeId": 19
        }
      ]
    },
    {
      "type": "struct data_structures::balance::Balance",
      "metadataTypeId": 19,
      "components": [
        {
          "name": "base",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "quote",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct data_structures::order::Order",
      "metadataTypeId": 20,
      "components": [
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "asset_type",
          "typeId": 3
        },
        {
          "name": "order_type",
          "typeId": 6
        },
        {
          "name": "owner",
          "typeId": 13
        },
        {
          "name": "price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "block_height",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "matcher_fee",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "protocol_fee",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct data_structures::order_change::OrderChangeInfo",
      "metadataTypeId": 21,
      "components": [
        {
          "name": "change_type",
          "typeId": 5
        },
        {
          "name": "block_height",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "sender",
          "typeId": 13
        },
        {
          "name": "tx_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "amount_before",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "amount_after",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::CancelOrderEvent",
      "metadataTypeId": 22,
      "components": [
        {
          "name": "order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct events::DepositEvent",
      "metadataTypeId": 23,
      "components": [
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "asset",
          "typeId": 32
        },
        {
          "name": "user",
          "typeId": 13
        }
      ]
    },
    {
      "type": "struct events::MatchOrderEvent",
      "metadataTypeId": 24,
      "components": [
        {
          "name": "order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "asset",
          "typeId": 32
        },
        {
          "name": "order_matcher",
          "typeId": 13
        },
        {
          "name": "owner",
          "typeId": 13
        },
        {
          "name": "counterparty",
          "typeId": 13
        },
        {
          "name": "match_size",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "match_price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::OpenOrderEvent",
      "metadataTypeId": 25,
      "components": [
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "asset",
          "typeId": 32
        },
        {
          "name": "order_type",
          "typeId": 6
        },
        {
          "name": "order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "user",
          "typeId": 13
        }
      ]
    },
    {
      "type": "struct events::SetMatcherRewardEvent",
      "metadataTypeId": 26,
      "components": [
        {
          "name": "amount",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ]
    },
    {
      "type": "struct events::SetProtocolFeeEvent",
      "metadataTypeId": 27,
      "components": [
        {
          "name": "amount",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ]
    },
    {
      "type": "struct events::TradeOrderEvent",
      "metadataTypeId": 28,
      "components": [
        {
          "name": "base_sell_order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "base_buy_order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "order_matcher",
          "typeId": 13
        },
        {
          "name": "trade_size",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "trade_price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "block_height",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "tx_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct events::WithdrawEvent",
      "metadataTypeId": 29,
      "components": [
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "asset",
          "typeId": 32
        },
        {
          "name": "user",
          "typeId": 13
        }
      ]
    },
    {
      "type": "struct events::WithdrawProtocolFeeEvent",
      "metadataTypeId": 30,
      "components": [
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "to",
          "typeId": 13
        },
        {
          "name": "owner",
          "typeId": 13
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 31,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 32,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 33,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 34,
      "components": [
        {
          "name": "ptr",
          "typeId": 17
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        16
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 35,
      "components": [
        {
          "name": "buf",
          "typeId": 34,
          "typeArguments": [
            {
              "name": "",
              "typeId": 16
            }
          ]
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        16
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "order_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "cancel_order",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "deposit",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "order_type",
          "concreteTypeId": "87d371fb295bf9d2ae8ded087940e8d0b097ddef40d8499ac650a22985df2682"
        },
        {
          "name": "limit_type",
          "concreteTypeId": "d9c35258b461d6cc17f23d4d7c184b37b99882e5c80d683a5826bcb9b2494e86"
        },
        {
          "name": "price",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "slippage",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "orders",
          "concreteTypeId": "32559685d0c9845f059bf9d472a0a38cf77d36c23dfcffe5489e86a65cdd9198"
        }
      ],
      "name": "fulfill_order_many",
      "output": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "orders",
          "concreteTypeId": "32559685d0c9845f059bf9d472a0a38cf77d36c23dfcffe5489e86a65cdd9198"
        }
      ],
      "name": "match_order_many",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order0_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "order1_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "match_order_pair",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "order_type",
          "concreteTypeId": "87d371fb295bf9d2ae8ded087940e8d0b097ddef40d8499ac650a22985df2682"
        },
        {
          "name": "price",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "open_order",
      "output": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ],
      "name": "set_matcher_fee",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ],
      "name": "set_protocol_fee",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "asset_type",
          "concreteTypeId": "4c4bcee5a492c5113714e96c87704a3af9b8bd766ce5da2ca716a6564da06ba3"
        }
      ],
      "name": "withdraw",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "to",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "withdraw_protocol_fee",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "user",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "account",
      "output": "bd0e347385bb64c47e8218e9ee0e54aca355fca0d41b062ea753e7d85e0b6f9f",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "config",
      "output": "25021b94c74394449f77590716751d9ea42fe49aa7bf2c35793defbf6e7d09e5",
      "attributes": null
    },
    {
      "inputs": [],
      "name": "matcher_fee",
      "output": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "order",
      "output": "af7345d115f618be19cd709b6734bdd5fd52bb0c27617a74a9564e4cea947d01",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "order_change_info",
      "output": "742fbfc9dbc675c4bb942c1c3d87581f5da5c5a8b0fc21e0d1f8d873328d5e5a",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_type",
          "concreteTypeId": "87d371fb295bf9d2ae8ded087940e8d0b097ddef40d8499ac650a22985df2682"
        },
        {
          "name": "owner",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "price",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "block_height",
          "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ],
      "name": "order_id",
      "output": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "attributes": null
    },
    {
      "inputs": [],
      "name": "protocol_fee",
      "output": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "protocol_fee_amount",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_protocol_fee",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "user",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "user_orders",
      "output": "32559685d0c9845f059bf9d472a0a38cf77d36c23dfcffe5489e86a65cdd9198",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "5557842539076482339",
      "concreteTypeId": "4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038"
    },
    {
      "logId": "999626799421532101",
      "concreteTypeId": "0ddf63471f7b27c54c55fd3d75fe37594fb1b07a496dba57eb8fc56497e9d9c1"
    },
    {
      "logId": "487470194140633944",
      "concreteTypeId": "06c3d78f1057db580eb36dc2fc04ebd7407f4a4e954417b6761844fe38ee1a5d"
    },
    {
      "logId": "15329379498675066312",
      "concreteTypeId": "d4bce56f7daed5c8d2b62c0f0745c18d9fdd0b2f0dafecf85ebdd9c7378b5c63"
    },
    {
      "logId": "14676650066558707344",
      "concreteTypeId": "cbadef79adf1e6906cac7404759d7d55a9eaa9f1e6d479ecbbfa76f727486081"
    },
    {
      "logId": "4038555509566971562",
      "concreteTypeId": "380bd4d6b96f9eaa3a3d8db8bb9753399443715fb3fd65460cc28d6ab4d3659b"
    },
    {
      "logId": "16169998749359270814",
      "concreteTypeId": "e0676030b211eb9ed3b9837fc852a3cf3b6533a31533dd3ab957e8b3f6e77dd3"
    },
    {
      "logId": "12590297951544646752",
      "concreteTypeId": "aeb9b947da259c606e2c25be1150e2150f609fe5f2ec593c9a7ebb771e4e7065"
    },
    {
      "logId": "7812135309850120461",
      "concreteTypeId": "6c6a47ac80e7110dd8666e169f0fffe2d1378df88cf8960bb9dfe14a84ac3495"
    },
    {
      "logId": "2271581833574730066",
      "concreteTypeId": "1f8647a46c73c952a719dd380c2aa8f67c2ba78a07c43225e26166d5d6b70886"
    },
    {
      "logId": "18305104039093136274",
      "concreteTypeId": "fe08cb2392b6eb92ee6b7868e2877ca0630f87f543acc63897f7d806229379d5"
    },
    {
      "logId": "15838754841496526215",
      "concreteTypeId": "dbce8f9c6be61d876835d7a0b5794cfc25fc3b171ba3748ec4c8f2e7ce426cf6"
    },
    {
      "logId": "649664855397936830",
      "concreteTypeId": "090412be710caebee4e019479841ea0100912819a3e1c52ba39b1faa7b778c83"
    },
    {
      "logId": "10772010129570911307",
      "concreteTypeId": "957dde23e9fbd44b1bada18eae8b84f6d868be2fe55b721ce24b54cdcdafda79"
    },
    {
      "logId": "10918704871079408520",
      "concreteTypeId": "9787083b0003f388ec6bf30609ff6a10c76fada67314a162841a445b07a17168"
    },
    {
      "logId": "10165625215314906042",
      "concreteTypeId": "8d138e4606994bba4afdb97227287e88ead334b73c4ea0c30e2920b2bd57e82a"
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "BASE_ASSET",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "offset": 95680
    },
    {
      "name": "BASE_ASSET_DECIMALS",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "offset": 95712
    },
    {
      "name": "OWNER",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "offset": 95768
    },
    {
      "name": "PRICE_DECIMALS",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "offset": 95800
    },
    {
      "name": "QUOTE_ASSET",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "offset": 95808
    },
    {
      "name": "QUOTE_ASSET_DECIMALS",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "offset": 95840
    },
    {
      "name": "FUEL_ASSET",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "offset": 95736
    },
    {
      "name": "ETH_BASE_PRICE",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 95720
    },
    {
      "name": "ETH_QUOTE_PRICE",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 95728
    },
    {
      "name": "VERSION",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "offset": 95848
    }
  ]
};

const storageSlots: StorageSlot[] = [
  {
    "key": "3493c96d5901ca6a92009e6e8732dee2d274b75731fc3355e9888ea296e15c0c",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "7dbef6dc4e365382940f04cc782498fa1eb5d35829c52c2ddeaa18df059c4910",
    "value": "000000000000000f000000000000000000000000000000000000000000000000"
  },
  {
    "key": "ed696908088d1de73a9af20eb7163b692ba0b94d25b1085650252370ae38a1e5",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class MarketContractInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    cancel_order: FunctionFragment;
    deposit: FunctionFragment;
    fulfill_order_many: FunctionFragment;
    match_order_many: FunctionFragment;
    match_order_pair: FunctionFragment;
    open_order: FunctionFragment;
    set_matcher_fee: FunctionFragment;
    set_protocol_fee: FunctionFragment;
    withdraw: FunctionFragment;
    withdraw_protocol_fee: FunctionFragment;
    account: FunctionFragment;
    config: FunctionFragment;
    matcher_fee: FunctionFragment;
    order: FunctionFragment;
    order_change_info: FunctionFragment;
    order_id: FunctionFragment;
    protocol_fee: FunctionFragment;
    protocol_fee_amount: FunctionFragment;
    total_protocol_fee: FunctionFragment;
    user_orders: FunctionFragment;
  };
}

export class MarketContract extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: MarketContractInterface;
  declare functions: {
    cancel_order: InvokeFunction<[order_id: string], void>;
    deposit: InvokeFunction<[], void>;
    fulfill_order_many: InvokeFunction<[amount: BigNumberish, order_type: OrderTypeInput, limit_type: LimitTypeInput, price: BigNumberish, slippage: BigNumberish, orders: Vec<string>], string>;
    match_order_many: InvokeFunction<[orders: Vec<string>], void>;
    match_order_pair: InvokeFunction<[order0_id: string, order1_id: string], void>;
    open_order: InvokeFunction<[amount: BigNumberish, order_type: OrderTypeInput, price: BigNumberish], string>;
    set_matcher_fee: InvokeFunction<[amount: BigNumberish], void>;
    set_protocol_fee: InvokeFunction<[amount: BigNumberish], void>;
    withdraw: InvokeFunction<[amount: BigNumberish, asset_type: AssetTypeInput], void>;
    withdraw_protocol_fee: InvokeFunction<[to: IdentityInput], void>;
    account: InvokeFunction<[user: IdentityInput], Option<AccountOutput>>;
    config: InvokeFunction<[], [AddressOutput, AssetIdOutput, number, AssetIdOutput, number, number, AssetIdOutput, number]>;
    matcher_fee: InvokeFunction<[], number>;
    order: InvokeFunction<[order: string], Option<OrderOutput>>;
    order_change_info: InvokeFunction<[order_id: string], Vec<OrderChangeInfoOutput>>;
    order_id: InvokeFunction<[order_type: OrderTypeInput, owner: IdentityInput, price: BigNumberish, block_height: BigNumberish], string>;
    protocol_fee: InvokeFunction<[], number>;
    protocol_fee_amount: InvokeFunction<[amount: BigNumberish], BN>;
    total_protocol_fee: InvokeFunction<[], BN>;
    user_orders: InvokeFunction<[user: IdentityInput], Vec<string>>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
